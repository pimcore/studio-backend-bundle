services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    #
    # INSTALLER
    #
    Pimcore\Bundle\StudioApiBundle\Installer:
        public: true
        arguments:
            $bundle: "@=service('kernel').getBundle('PimcoreStudioApiBundle')"

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    Pimcore\Bundle\StudioApiBundle\Controller\:
        resource: '../src/Controller'
        public: true
        tags: [ 'controller.service_arguments' ]



    Pimcore\Bundle\StudioApiBundle\Service\IconServiceInterface:
        class: Pimcore\Bundle\StudioApiBundle\Service\IconService

    Pimcore\Bundle\StudioApiBundle\Service\TranslatorServiceInterface:
        class: Pimcore\Bundle\StudioApiBundle\Service\TranslatorService

    Pimcore\Bundle\StudioApiBundle\Service\TokenServiceInterface:
        class: Pimcore\Bundle\StudioApiBundle\Service\TokenService

    Pimcore\Bundle\StudioApiBundle\Service\SecurityServiceInterface:
        class: Pimcore\Bundle\StudioApiBundle\Service\SecurityService

    Pimcore\Bundle\StudioApiBundle\Service\OpenApiServiceInterface:
        class: Pimcore\Bundle\StudioApiBundle\Service\OpenApiService

    #Voters
    Pimcore\Bundle\StudioApiBundle\Security\Voter\AuthorizationVoter:
        arguments: ['@request_stack']
        tags:
            - { name: security.voter }

    Pimcore\Bundle\StudioApiBundle\Security\Voter\PublicAuthorizationVoter:
        arguments: [ '@request_stack' ]
        tags:
            - { name: security.voter }





