name: "Codeception Tests centralised"

on:
    workflow_dispatch:
    push:
        branches:
            - "[0-9]+.[0-9]+"
            - "[0-9]+.x"
            - "feature-*"
    pull_request:
        types: [opened, synchronize, reopened]

env:
  PIMCORE_PROJECT_ROOT: ${{ github.workspace }}
  PRIVATE_REPO: ${{ github.event.repository.private }}

jobs:
    setup-matrix:
        runs-on: ubuntu-latest
        outputs:
            php_versions: ${{ steps.parse-php-versions.outputs.php_versions }}
            matrix: ${{ steps.set-matrix.outputs.matrix }}
            private_repo: ${{ env.PRIVATE_REPO }}
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Checkout reusable workflow repo
          uses: actions/checkout@v4
          with:
            repository: pimcore/workflows-collection-public
            ref: main
            path: reusable-workflows

        - name: Parse PHP versions from composer.json
          id: parse-php-versions
          run: |
            if [ -f composer.json ]; then
              php_versions=$(jq -r '.require.php' composer.json | grep -oP '\d+\.\d+' | tr '\n' ',' | sed 's/,$//')
              if [ -z "$php_versions" ]; then
                echo "No PHP versions found in composer.json"
                echo "Setting default PHP value"
                echo "php_versions=default" >> $GITHUB_OUTPUT
              else
                echo "php_versions=$php_versions" >> $GITHUB_OUTPUT
                echo "#### php versions #### : $php_versions"
              fi
            else
              echo "composer.json not found"
              exit 1
            fi

        - name: Set up matrix
          id: set-matrix
          run: |
            php_versions="${{ steps.parse-php-versions.outputs.php_versions }}"

            MATRIX_JSON=$(cat reusable-workflows/codeception-tests-configuration/matrix-config.json)

            IFS=',' read -ra VERSIONS_ARRAY <<< "$php_versions"

            FILTERED_MATRIX_JSON=$(echo $MATRIX_JSON | jq --arg php_versions "$php_versions" '
            {
              matrix: [
                .configs[] |
                select(.php_version == $php_versions) |
                .matrix[]
              ]
            }')

            ENCODED_MATRIX_JSON=$(echo $FILTERED_MATRIX_JSON | jq -c .)

            echo "matrix=${ENCODED_MATRIX_JSON}" >> $GITHUB_OUTPUT

    codeception-tests:
        needs: setup-matrix
        strategy:
            matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
        uses: pimcore/workflows-collection-public/.github/workflows/reusable-codeception-tests-centralized.yaml@main
        with:
            APP_ENV: test
            PIMCORE_TEST: 1
            PRIVATE_REPO: ${{ needs.setup-matrix.outputs.private_repo}}
            PHP_VERSION: ${{ matrix.matrix.php-version }}
            DATABASE: ${{ matrix.matrix.database }}
            SERVER_VERSION: ${{ matrix.matrix.server_version }}
            DEPENDENCIES: ${{ matrix.matrix.dependencies }}
            EXPERIMENTAL: ${{ matrix.matrix.experimental }}
            PIMCORE_VERSION: ${{ matrix.matrix.pimcore_version }}
        secrets:
            SSH_PRIVATE_KEY_PIMCORE_DEPLOYMENTS_USER: ${{ secrets.SSH_PRIVATE_KEY_PIMCORE_DEPLOYMENTS_USER }}
            COMPOSER_PIMCORE_REPO_PACKAGIST_TOKEN: ${{ secrets.COMPOSER_PIMCORE_REPO_PACKAGIST_TOKEN }}