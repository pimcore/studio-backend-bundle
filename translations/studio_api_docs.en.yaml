asset_tag_description:  Asset operations to get/update/create/delete assets
clone_asset_created_response: Successfully copied parent asset and created <strong>jobRun</strong> for copying child assets
clone_asset_description:  >
  Clones a specific asset with the given <strong>{id}</strong>. <br>
  The <strong>{parentId}</strong> must be a folder
clone_asset_success_response: Successfully copied asset
clone_asset_summary: Clone a specific asset
update_asset_by_id_description:  >
  Update needs to have the complete data present. <br>
  You can create/update/delete list entries like metadata, custom settings and properties. <br> 
  E.g. if you want to remove an entry from metadata simply do not include this entry in the update. <br> 
  If you want to update only a single field, use the PATCH method.
update_asset_by_id_summary: Update an asset by ID
clone_data_object_created_response: Successfully copied parent data object and created <strong>jobRun</strong> for copying child objects
clone_data_object_description:  >
  Clones a specific data object with the given <strong>{id}</strong>. <br>
  The <strong>{parentId}</strong> must be a folder or another data object
clone_data_object_success_response: Successfully copied data object
clone_data_object_summary: Clone a specific data object
delete_element_description:  >
  Deletes a specific element based on the given <strong>{elementType}</strong> and <strong>{id}</strong>. <br>
  The <strong>{id}</strong> must be an existing element of the provided <strong>{elementType}</strong>. <br>
  If element is a folder, all child elements will be deleted as well. Elements are moved into the Recycle Bin before deletion.
delete_element_summary: Delete a specific element and its children
delete_element_success_response: Successfully deleted element
delete_element_created_response: Successfully created jobRun for deleting element and its children